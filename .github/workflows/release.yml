name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  release:
    # Prevent the action from running on forks
    if: github.repository == 'Ingvarstep/GLiNER.js'
    permissions:
      contents: write # Required to create the release
      actions: read # For checking token permissions
      issues: write # For creating an issue
    name: Create GitHub Release
    runs-on: ubuntu-latest

    steps:
      - name: Check GitHub Token Permissions
        run: |
          echo "Checking permissions of GITHUB_TOKEN...."
          curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/permissions

      - name: Test GITHUB_TOKEN by Creating an Issue
        run: |
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/issues \
          -d '{"title":"Test issue from GitHub Action"}'

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Set up pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 6.0.2

      - name: Install dependencies
        run: pnpm i

      - name: Build the package
        run: pnpm run build # Ensure you have a build script in your package.json

      - name: Create a release archive
        run: zip -r package-release.zip dist package.json src README.md CHANGELOG.md # Archive the required files and folders

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.sha }}
          release_name: Release v${{ github.sha }}
          draft: false
          prerelease: true

      - name: Trim Upload URL
        run: |
          echo "Original URL: ${{ steps.create_release.outputs.upload_url }}"
          TRIMMED_URL=$(echo '${{ steps.create_release.outputs.upload_url }}' | sed 's/{.*}//')
          echo "Trimmed URL: $TRIMMED_URL"
          echo $TRIMMED_URL > upload_url.txt
          echo "UPLOAD_URL=$(cat upload_url.txt)" >> $GITHUB_ENV

      - name: List files for debugging
        run: ls -lah

      - name: Upload release artifact
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./package-release.zip
          asset_name: package-release.zip
          asset_content_type: application/zip

      # Uncomment the following steps to enable npm publishing when you're ready
      # - name: Publish to npm
      #   run: pnpm publish
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      #     NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
